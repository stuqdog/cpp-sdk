// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/mltraining/v1/ml_training.proto

#include "app/mltraining/v1/ml_training.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace viam {
namespace app {
namespace mltraining {
namespace v1 {
PROTOBUF_CONSTEXPR SubmitTrainingJobRequest::SubmitTrainingJobRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tags_)*/{}
  , /*decltype(_impl_.organization_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.model_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.model_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.filter_)*/nullptr
  , /*decltype(_impl_.model_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SubmitTrainingJobRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubmitTrainingJobRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubmitTrainingJobRequestDefaultTypeInternal() {}
  union {
    SubmitTrainingJobRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubmitTrainingJobRequestDefaultTypeInternal _SubmitTrainingJobRequest_default_instance_;
PROTOBUF_CONSTEXPR SubmitTrainingJobResponse::SubmitTrainingJobResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SubmitTrainingJobResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubmitTrainingJobResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubmitTrainingJobResponseDefaultTypeInternal() {}
  union {
    SubmitTrainingJobResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubmitTrainingJobResponseDefaultTypeInternal _SubmitTrainingJobResponse_default_instance_;
PROTOBUF_CONSTEXPR GetTrainingJobRequest::GetTrainingJobRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetTrainingJobRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTrainingJobRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTrainingJobRequestDefaultTypeInternal() {}
  union {
    GetTrainingJobRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTrainingJobRequestDefaultTypeInternal _GetTrainingJobRequest_default_instance_;
PROTOBUF_CONSTEXPR GetTrainingJobResponse::GetTrainingJobResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metadata_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetTrainingJobResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTrainingJobResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTrainingJobResponseDefaultTypeInternal() {}
  union {
    GetTrainingJobResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTrainingJobResponseDefaultTypeInternal _GetTrainingJobResponse_default_instance_;
PROTOBUF_CONSTEXPR TrainingJobMetadata::TrainingJobMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.synced_model_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.request_)*/nullptr
  , /*decltype(_impl_.created_on_)*/nullptr
  , /*decltype(_impl_.last_modified_)*/nullptr
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TrainingJobMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrainingJobMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrainingJobMetadataDefaultTypeInternal() {}
  union {
    TrainingJobMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrainingJobMetadataDefaultTypeInternal _TrainingJobMetadata_default_instance_;
PROTOBUF_CONSTEXPR TrainingJob::TrainingJob(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.output_path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.vertex_job_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metadata_)*/nullptr
  , /*decltype(_impl_.model_metadata_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TrainingJobDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrainingJobDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrainingJobDefaultTypeInternal() {}
  union {
    TrainingJob _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrainingJobDefaultTypeInternal _TrainingJob_default_instance_;
}  // namespace v1
}  // namespace mltraining
}  // namespace app
}  // namespace viam
static ::_pb::Metadata file_level_metadata_app_2fmltraining_2fv1_2fml_5ftraining_2eproto[6];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_app_2fmltraining_2fv1_2fml_5ftraining_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_app_2fmltraining_2fv1_2fml_5ftraining_2eproto = nullptr;

const uint32_t TableStruct_app_2fmltraining_2fv1_2fml_5ftraining_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::SubmitTrainingJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::SubmitTrainingJobRequest, _impl_.filter_),
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::SubmitTrainingJobRequest, _impl_.organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::SubmitTrainingJobRequest, _impl_.model_name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::SubmitTrainingJobRequest, _impl_.model_version_),
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::SubmitTrainingJobRequest, _impl_.model_type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::SubmitTrainingJobRequest, _impl_.tags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::SubmitTrainingJobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::SubmitTrainingJobResponse, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::GetTrainingJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::GetTrainingJobRequest, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::GetTrainingJobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::GetTrainingJobResponse, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::GetTrainingJobResponse, _impl_.metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::TrainingJobMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::TrainingJobMetadata, _impl_.request_),
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::TrainingJobMetadata, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::TrainingJobMetadata, _impl_.created_on_),
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::TrainingJobMetadata, _impl_.last_modified_),
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::TrainingJobMetadata, _impl_.synced_model_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::TrainingJob, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::TrainingJob, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::TrainingJob, _impl_.metadata_),
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::TrainingJob, _impl_.output_path_),
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::TrainingJob, _impl_.vertex_job_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::mltraining::v1::TrainingJob, _impl_.model_metadata_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::viam::app::mltraining::v1::SubmitTrainingJobRequest)},
  { 12, -1, -1, sizeof(::viam::app::mltraining::v1::SubmitTrainingJobResponse)},
  { 19, -1, -1, sizeof(::viam::app::mltraining::v1::GetTrainingJobRequest)},
  { 26, -1, -1, sizeof(::viam::app::mltraining::v1::GetTrainingJobResponse)},
  { 34, -1, -1, sizeof(::viam::app::mltraining::v1::TrainingJobMetadata)},
  { 45, -1, -1, sizeof(::viam::app::mltraining::v1::TrainingJob)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::viam::app::mltraining::v1::_SubmitTrainingJobRequest_default_instance_._instance,
  &::viam::app::mltraining::v1::_SubmitTrainingJobResponse_default_instance_._instance,
  &::viam::app::mltraining::v1::_GetTrainingJobRequest_default_instance_._instance,
  &::viam::app::mltraining::v1::_GetTrainingJobResponse_default_instance_._instance,
  &::viam::app::mltraining::v1::_TrainingJobMetadata_default_instance_._instance,
  &::viam::app::mltraining::v1::_TrainingJob_default_instance_._instance,
};

const char descriptor_table_protodef_app_2fmltraining_2fv1_2fml_5ftraining_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#app/mltraining/v1/ml_training.proto\022\026v"
  "iam.app.mltraining.v1\032\026app/data/v1/data."
  "proto\032\034google/protobuf/struct.proto\032\037goo"
  "gle/protobuf/timestamp.proto\032\026tagger/v1/"
  "tagger.proto\"\217\002\n\030SubmitTrainingJobReques"
  "t\0220\n\006filter\030\001 \001(\0132\030.viam.app.data.v1.Fil"
  "terR\006filter\022\'\n\017organization_id\030\002 \001(\tR\016or"
  "ganizationId\022\035\n\nmodel_name\030\003 \001(\tR\tmodelN"
  "ame\022#\n\rmodel_version\030\004 \001(\tR\014modelVersion"
  "\022@\n\nmodel_type\030\005 \001(\0162!.viam.app.mltraini"
  "ng.v1.ModelTypeR\tmodelType\022\022\n\004tags\030\006 \003(\t"
  "R\004tags\"+\n\031SubmitTrainingJobResponse\022\016\n\002i"
  "d\030\001 \001(\tR\002id\"\'\n\025GetTrainingJobRequest\022\016\n\002"
  "id\030\001 \001(\tR\002id\"q\n\026GetTrainingJobResponse\022\016"
  "\n\002id\030\001 \001(\tR\002id\022G\n\010metadata\030\002 \001(\0132+.viam."
  "app.mltraining.v1.TrainingJobMetadataR\010m"
  "etadata\"\305\002\n\023TrainingJobMetadata\022J\n\007reque"
  "st\030\001 \001(\01320.viam.app.mltraining.v1.Submit"
  "TrainingJobRequestR\007request\022>\n\006status\030\002 "
  "\001(\0162&.viam.app.mltraining.v1.TrainingSta"
  "tusR\006status\0229\n\ncreated_on\030\003 \001(\0132\032.google"
  ".protobuf.TimestampR\tcreatedOn\022\?\n\rlast_m"
  "odified\030\004 \001(\0132\032.google.protobuf.Timestam"
  "pR\014lastModified\022&\n\017synced_model_id\030\005 \001(\t"
  "R\rsyncedModelId\"\304\003\n\013TrainingJob\0223\n\002id\030\001 "
  "\001(\tB#\232\204\236\003\036bson:\"_id\" json:\"id,omitempty\""
  "R\002id\022m\n\010metadata\030\002 \001(\0132+.viam.app.mltrai"
  "ning.v1.TrainingJobMetadataB$\232\204\236\003\037bson:\""
  "metadata\" json:\"metadata\"R\010metadata\022K\n\013o"
  "utput_path\030\003 \001(\tB*\232\204\236\003%bson:\"output_path"
  "\" json:\"output_path\"R\noutputPath\022R\n\rvert"
  "ex_job_id\030\004 \001(\tB.\232\204\236\003)bson:\"vertex_job_i"
  "d\" json:\"vertex_job_id\"R\013vertexJobId\022p\n\016"
  "model_metadata\030\005 \001(\0132\027.google.protobuf.S"
  "tructB0\232\204\236\003+bson:\"model_metadata\" json:\""
  "model_metadata\"R\rmodelMetadata*~\n\tModelT"
  "ype\022\032\n\026MODEL_TYPE_UNSPECIFIED\020\000\022*\n&MODEL"
  "_TYPE_SINGLE_LABEL_CLASSIFICATION\020\001\022)\n%M"
  "ODEL_TYPE_MULTI_LABEL_CLASSIFICATION\020\002*\312"
  "\001\n\016TrainingStatus\022\037\n\033TRAINING_STATUS_UNS"
  "PECIFIED\020\000\022\033\n\027TRAINING_STATUS_PENDING\020\001\022"
  "\037\n\033TRAINING_STATUS_IN_PROGRESS\020\002\022\035\n\031TRAI"
  "NING_STATUS_COMPLETED\020\003\022\032\n\026TRAINING_STAT"
  "US_FAILED\020\004\022\036\n\032TRAINING_STATUS_SUBMITTIN"
  "G\020\0052\376\001\n\021MLTrainingService\022x\n\021SubmitTrain"
  "ingJob\0220.viam.app.mltraining.v1.SubmitTr"
  "ainingJobRequest\0321.viam.app.mltraining.v"
  "1.SubmitTrainingJobResponse\022o\n\016GetTraini"
  "ngJob\022-.viam.app.mltraining.v1.GetTraini"
  "ngJobRequest\032..viam.app.mltraining.v1.Ge"
  "tTrainingJobResponseB#Z!go.viam.com/api/"
  "app/mltraining/v1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto_deps[4] = {
  &::descriptor_table_app_2fdata_2fv1_2fdata_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_tagger_2fv1_2ftagger_2eproto,
};
static ::_pbi::once_flag descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto = {
    false, false, 2065, descriptor_table_protodef_app_2fmltraining_2fv1_2fml_5ftraining_2eproto,
    "app/mltraining/v1/ml_training.proto",
    &descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto_once, descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto_deps, 4, 6,
    schemas, file_default_instances, TableStruct_app_2fmltraining_2fv1_2fml_5ftraining_2eproto::offsets,
    file_level_metadata_app_2fmltraining_2fv1_2fml_5ftraining_2eproto, file_level_enum_descriptors_app_2fmltraining_2fv1_2fml_5ftraining_2eproto,
    file_level_service_descriptors_app_2fmltraining_2fv1_2fml_5ftraining_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto_getter() {
  return &descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_app_2fmltraining_2fv1_2fml_5ftraining_2eproto(&descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto);
namespace viam {
namespace app {
namespace mltraining {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ModelType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto);
  return file_level_enum_descriptors_app_2fmltraining_2fv1_2fml_5ftraining_2eproto[0];
}
bool ModelType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TrainingStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto);
  return file_level_enum_descriptors_app_2fmltraining_2fv1_2fml_5ftraining_2eproto[1];
}
bool TrainingStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class SubmitTrainingJobRequest::_Internal {
 public:
  static const ::viam::app::data::v1::Filter& filter(const SubmitTrainingJobRequest* msg);
};

const ::viam::app::data::v1::Filter&
SubmitTrainingJobRequest::_Internal::filter(const SubmitTrainingJobRequest* msg) {
  return *msg->_impl_.filter_;
}
void SubmitTrainingJobRequest::clear_filter() {
  if (GetArenaForAllocation() == nullptr && _impl_.filter_ != nullptr) {
    delete _impl_.filter_;
  }
  _impl_.filter_ = nullptr;
}
SubmitTrainingJobRequest::SubmitTrainingJobRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.app.mltraining.v1.SubmitTrainingJobRequest)
}
SubmitTrainingJobRequest::SubmitTrainingJobRequest(const SubmitTrainingJobRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SubmitTrainingJobRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tags_){from._impl_.tags_}
    , decltype(_impl_.organization_id_){}
    , decltype(_impl_.model_name_){}
    , decltype(_impl_.model_version_){}
    , decltype(_impl_.filter_){nullptr}
    , decltype(_impl_.model_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    _this->_impl_.organization_id_.Set(from._internal_organization_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    _this->_impl_.model_name_.Set(from._internal_model_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.model_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_version().empty()) {
    _this->_impl_.model_version_.Set(from._internal_model_version(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_filter()) {
    _this->_impl_.filter_ = new ::viam::app::data::v1::Filter(*from._impl_.filter_);
  }
  _this->_impl_.model_type_ = from._impl_.model_type_;
  // @@protoc_insertion_point(copy_constructor:viam.app.mltraining.v1.SubmitTrainingJobRequest)
}

inline void SubmitTrainingJobRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tags_){arena}
    , decltype(_impl_.organization_id_){}
    , decltype(_impl_.model_name_){}
    , decltype(_impl_.model_version_){}
    , decltype(_impl_.filter_){nullptr}
    , decltype(_impl_.model_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.model_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SubmitTrainingJobRequest::~SubmitTrainingJobRequest() {
  // @@protoc_insertion_point(destructor:viam.app.mltraining.v1.SubmitTrainingJobRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SubmitTrainingJobRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tags_.~RepeatedPtrField();
  _impl_.organization_id_.Destroy();
  _impl_.model_name_.Destroy();
  _impl_.model_version_.Destroy();
  if (this != internal_default_instance()) delete _impl_.filter_;
}

void SubmitTrainingJobRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SubmitTrainingJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.mltraining.v1.SubmitTrainingJobRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.organization_id_.ClearToEmpty();
  _impl_.model_name_.ClearToEmpty();
  _impl_.model_version_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.filter_ != nullptr) {
    delete _impl_.filter_;
  }
  _impl_.filter_ = nullptr;
  _impl_.model_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubmitTrainingJobRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.data.v1.Filter filter = 1 [json_name = "filter"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_filter(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string organization_id = 2 [json_name = "organizationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.mltraining.v1.SubmitTrainingJobRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string model_name = 3 [json_name = "modelName"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.mltraining.v1.SubmitTrainingJobRequest.model_name"));
        } else
          goto handle_unusual;
        continue;
      // string model_version = 4 [json_name = "modelVersion"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_model_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.mltraining.v1.SubmitTrainingJobRequest.model_version"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.mltraining.v1.ModelType model_type = 5 [json_name = "modelType"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_model_type(static_cast<::viam::app::mltraining::v1::ModelType>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated string tags = 6 [json_name = "tags"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_tags();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.app.mltraining.v1.SubmitTrainingJobRequest.tags"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SubmitTrainingJobRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.mltraining.v1.SubmitTrainingJobRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.data.v1.Filter filter = 1 [json_name = "filter"];
  if (this->_internal_has_filter()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::filter(this),
        _Internal::filter(this).GetCachedSize(), target, stream);
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.mltraining.v1.SubmitTrainingJobRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_organization_id(), target);
  }

  // string model_name = 3 [json_name = "modelName"];
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.mltraining.v1.SubmitTrainingJobRequest.model_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_model_name(), target);
  }

  // string model_version = 4 [json_name = "modelVersion"];
  if (!this->_internal_model_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_version().data(), static_cast<int>(this->_internal_model_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.mltraining.v1.SubmitTrainingJobRequest.model_version");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_model_version(), target);
  }

  // .viam.app.mltraining.v1.ModelType model_type = 5 [json_name = "modelType"];
  if (this->_internal_model_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      5, this->_internal_model_type(), target);
  }

  // repeated string tags = 6 [json_name = "tags"];
  for (int i = 0, n = this->_internal_tags_size(); i < n; i++) {
    const auto& s = this->_internal_tags(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.mltraining.v1.SubmitTrainingJobRequest.tags");
    target = stream->WriteString(6, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.mltraining.v1.SubmitTrainingJobRequest)
  return target;
}

size_t SubmitTrainingJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.mltraining.v1.SubmitTrainingJobRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 6 [json_name = "tags"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.tags_.size());
  for (int i = 0, n = _impl_.tags_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.tags_.Get(i));
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string model_name = 3 [json_name = "modelName"];
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  // string model_version = 4 [json_name = "modelVersion"];
  if (!this->_internal_model_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_version());
  }

  // .viam.app.data.v1.Filter filter = 1 [json_name = "filter"];
  if (this->_internal_has_filter()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.filter_);
  }

  // .viam.app.mltraining.v1.ModelType model_type = 5 [json_name = "modelType"];
  if (this->_internal_model_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_model_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubmitTrainingJobRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SubmitTrainingJobRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubmitTrainingJobRequest::GetClassData() const { return &_class_data_; }


void SubmitTrainingJobRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SubmitTrainingJobRequest*>(&to_msg);
  auto& from = static_cast<const SubmitTrainingJobRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.app.mltraining.v1.SubmitTrainingJobRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tags_.MergeFrom(from._impl_.tags_);
  if (!from._internal_organization_id().empty()) {
    _this->_internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_model_name().empty()) {
    _this->_internal_set_model_name(from._internal_model_name());
  }
  if (!from._internal_model_version().empty()) {
    _this->_internal_set_model_version(from._internal_model_version());
  }
  if (from._internal_has_filter()) {
    _this->_internal_mutable_filter()->::viam::app::data::v1::Filter::MergeFrom(
        from._internal_filter());
  }
  if (from._internal_model_type() != 0) {
    _this->_internal_set_model_type(from._internal_model_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitTrainingJobRequest::CopyFrom(const SubmitTrainingJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.mltraining.v1.SubmitTrainingJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitTrainingJobRequest::IsInitialized() const {
  return true;
}

void SubmitTrainingJobRequest::InternalSwap(SubmitTrainingJobRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.organization_id_, lhs_arena,
      &other->_impl_.organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_name_, lhs_arena,
      &other->_impl_.model_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_version_, lhs_arena,
      &other->_impl_.model_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubmitTrainingJobRequest, _impl_.model_type_)
      + sizeof(SubmitTrainingJobRequest::_impl_.model_type_)
      - PROTOBUF_FIELD_OFFSET(SubmitTrainingJobRequest, _impl_.filter_)>(
          reinterpret_cast<char*>(&_impl_.filter_),
          reinterpret_cast<char*>(&other->_impl_.filter_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SubmitTrainingJobRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto_getter, &descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto_once,
      file_level_metadata_app_2fmltraining_2fv1_2fml_5ftraining_2eproto[0]);
}

// ===================================================================

class SubmitTrainingJobResponse::_Internal {
 public:
};

SubmitTrainingJobResponse::SubmitTrainingJobResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.app.mltraining.v1.SubmitTrainingJobResponse)
}
SubmitTrainingJobResponse::SubmitTrainingJobResponse(const SubmitTrainingJobResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SubmitTrainingJobResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.mltraining.v1.SubmitTrainingJobResponse)
}

inline void SubmitTrainingJobResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SubmitTrainingJobResponse::~SubmitTrainingJobResponse() {
  // @@protoc_insertion_point(destructor:viam.app.mltraining.v1.SubmitTrainingJobResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SubmitTrainingJobResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
}

void SubmitTrainingJobResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SubmitTrainingJobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.mltraining.v1.SubmitTrainingJobResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubmitTrainingJobResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.mltraining.v1.SubmitTrainingJobResponse.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SubmitTrainingJobResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.mltraining.v1.SubmitTrainingJobResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.mltraining.v1.SubmitTrainingJobResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.mltraining.v1.SubmitTrainingJobResponse)
  return target;
}

size_t SubmitTrainingJobResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.mltraining.v1.SubmitTrainingJobResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubmitTrainingJobResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SubmitTrainingJobResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubmitTrainingJobResponse::GetClassData() const { return &_class_data_; }


void SubmitTrainingJobResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SubmitTrainingJobResponse*>(&to_msg);
  auto& from = static_cast<const SubmitTrainingJobResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.app.mltraining.v1.SubmitTrainingJobResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitTrainingJobResponse::CopyFrom(const SubmitTrainingJobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.mltraining.v1.SubmitTrainingJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitTrainingJobResponse::IsInitialized() const {
  return true;
}

void SubmitTrainingJobResponse::InternalSwap(SubmitTrainingJobResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SubmitTrainingJobResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto_getter, &descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto_once,
      file_level_metadata_app_2fmltraining_2fv1_2fml_5ftraining_2eproto[1]);
}

// ===================================================================

class GetTrainingJobRequest::_Internal {
 public:
};

GetTrainingJobRequest::GetTrainingJobRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.app.mltraining.v1.GetTrainingJobRequest)
}
GetTrainingJobRequest::GetTrainingJobRequest(const GetTrainingJobRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTrainingJobRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.mltraining.v1.GetTrainingJobRequest)
}

inline void GetTrainingJobRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetTrainingJobRequest::~GetTrainingJobRequest() {
  // @@protoc_insertion_point(destructor:viam.app.mltraining.v1.GetTrainingJobRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTrainingJobRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
}

void GetTrainingJobRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTrainingJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.mltraining.v1.GetTrainingJobRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTrainingJobRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.mltraining.v1.GetTrainingJobRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTrainingJobRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.mltraining.v1.GetTrainingJobRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.mltraining.v1.GetTrainingJobRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.mltraining.v1.GetTrainingJobRequest)
  return target;
}

size_t GetTrainingJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.mltraining.v1.GetTrainingJobRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTrainingJobRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTrainingJobRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTrainingJobRequest::GetClassData() const { return &_class_data_; }


void GetTrainingJobRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTrainingJobRequest*>(&to_msg);
  auto& from = static_cast<const GetTrainingJobRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.app.mltraining.v1.GetTrainingJobRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTrainingJobRequest::CopyFrom(const GetTrainingJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.mltraining.v1.GetTrainingJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTrainingJobRequest::IsInitialized() const {
  return true;
}

void GetTrainingJobRequest::InternalSwap(GetTrainingJobRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTrainingJobRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto_getter, &descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto_once,
      file_level_metadata_app_2fmltraining_2fv1_2fml_5ftraining_2eproto[2]);
}

// ===================================================================

class GetTrainingJobResponse::_Internal {
 public:
  static const ::viam::app::mltraining::v1::TrainingJobMetadata& metadata(const GetTrainingJobResponse* msg);
};

const ::viam::app::mltraining::v1::TrainingJobMetadata&
GetTrainingJobResponse::_Internal::metadata(const GetTrainingJobResponse* msg) {
  return *msg->_impl_.metadata_;
}
GetTrainingJobResponse::GetTrainingJobResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.app.mltraining.v1.GetTrainingJobResponse)
}
GetTrainingJobResponse::GetTrainingJobResponse(const GetTrainingJobResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTrainingJobResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.metadata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metadata()) {
    _this->_impl_.metadata_ = new ::viam::app::mltraining::v1::TrainingJobMetadata(*from._impl_.metadata_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.mltraining.v1.GetTrainingJobResponse)
}

inline void GetTrainingJobResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.metadata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetTrainingJobResponse::~GetTrainingJobResponse() {
  // @@protoc_insertion_point(destructor:viam.app.mltraining.v1.GetTrainingJobResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTrainingJobResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metadata_;
}

void GetTrainingJobResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTrainingJobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.mltraining.v1.GetTrainingJobResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metadata_ != nullptr) {
    delete _impl_.metadata_;
  }
  _impl_.metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTrainingJobResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.mltraining.v1.GetTrainingJobResponse.id"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.mltraining.v1.TrainingJobMetadata metadata = 2 [json_name = "metadata"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTrainingJobResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.mltraining.v1.GetTrainingJobResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.mltraining.v1.GetTrainingJobResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .viam.app.mltraining.v1.TrainingJobMetadata metadata = 2 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::metadata(this),
        _Internal::metadata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.mltraining.v1.GetTrainingJobResponse)
  return target;
}

size_t GetTrainingJobResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.mltraining.v1.GetTrainingJobResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .viam.app.mltraining.v1.TrainingJobMetadata metadata = 2 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metadata_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTrainingJobResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTrainingJobResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTrainingJobResponse::GetClassData() const { return &_class_data_; }


void GetTrainingJobResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTrainingJobResponse*>(&to_msg);
  auto& from = static_cast<const GetTrainingJobResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.app.mltraining.v1.GetTrainingJobResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_has_metadata()) {
    _this->_internal_mutable_metadata()->::viam::app::mltraining::v1::TrainingJobMetadata::MergeFrom(
        from._internal_metadata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTrainingJobResponse::CopyFrom(const GetTrainingJobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.mltraining.v1.GetTrainingJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTrainingJobResponse::IsInitialized() const {
  return true;
}

void GetTrainingJobResponse::InternalSwap(GetTrainingJobResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  swap(_impl_.metadata_, other->_impl_.metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTrainingJobResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto_getter, &descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto_once,
      file_level_metadata_app_2fmltraining_2fv1_2fml_5ftraining_2eproto[3]);
}

// ===================================================================

class TrainingJobMetadata::_Internal {
 public:
  static const ::viam::app::mltraining::v1::SubmitTrainingJobRequest& request(const TrainingJobMetadata* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const TrainingJobMetadata* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& last_modified(const TrainingJobMetadata* msg);
};

const ::viam::app::mltraining::v1::SubmitTrainingJobRequest&
TrainingJobMetadata::_Internal::request(const TrainingJobMetadata* msg) {
  return *msg->_impl_.request_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
TrainingJobMetadata::_Internal::created_on(const TrainingJobMetadata* msg) {
  return *msg->_impl_.created_on_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
TrainingJobMetadata::_Internal::last_modified(const TrainingJobMetadata* msg) {
  return *msg->_impl_.last_modified_;
}
void TrainingJobMetadata::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && _impl_.created_on_ != nullptr) {
    delete _impl_.created_on_;
  }
  _impl_.created_on_ = nullptr;
}
void TrainingJobMetadata::clear_last_modified() {
  if (GetArenaForAllocation() == nullptr && _impl_.last_modified_ != nullptr) {
    delete _impl_.last_modified_;
  }
  _impl_.last_modified_ = nullptr;
}
TrainingJobMetadata::TrainingJobMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.app.mltraining.v1.TrainingJobMetadata)
}
TrainingJobMetadata::TrainingJobMetadata(const TrainingJobMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TrainingJobMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.synced_model_id_){}
    , decltype(_impl_.request_){nullptr}
    , decltype(_impl_.created_on_){nullptr}
    , decltype(_impl_.last_modified_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.synced_model_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.synced_model_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_synced_model_id().empty()) {
    _this->_impl_.synced_model_id_.Set(from._internal_synced_model_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_request()) {
    _this->_impl_.request_ = new ::viam::app::mltraining::v1::SubmitTrainingJobRequest(*from._impl_.request_);
  }
  if (from._internal_has_created_on()) {
    _this->_impl_.created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.created_on_);
  }
  if (from._internal_has_last_modified()) {
    _this->_impl_.last_modified_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.last_modified_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:viam.app.mltraining.v1.TrainingJobMetadata)
}

inline void TrainingJobMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.synced_model_id_){}
    , decltype(_impl_.request_){nullptr}
    , decltype(_impl_.created_on_){nullptr}
    , decltype(_impl_.last_modified_){nullptr}
    , decltype(_impl_.status_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.synced_model_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.synced_model_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TrainingJobMetadata::~TrainingJobMetadata() {
  // @@protoc_insertion_point(destructor:viam.app.mltraining.v1.TrainingJobMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TrainingJobMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.synced_model_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.request_;
  if (this != internal_default_instance()) delete _impl_.created_on_;
  if (this != internal_default_instance()) delete _impl_.last_modified_;
}

void TrainingJobMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TrainingJobMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.mltraining.v1.TrainingJobMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.synced_model_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.request_ != nullptr) {
    delete _impl_.request_;
  }
  _impl_.request_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.created_on_ != nullptr) {
    delete _impl_.created_on_;
  }
  _impl_.created_on_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.last_modified_ != nullptr) {
    delete _impl_.last_modified_;
  }
  _impl_.last_modified_ = nullptr;
  _impl_.status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TrainingJobMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.mltraining.v1.SubmitTrainingJobRequest request = 1 [json_name = "request"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.mltraining.v1.TrainingStatus status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::viam::app::mltraining::v1::TrainingStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp last_modified = 4 [json_name = "lastModified"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_modified(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string synced_model_id = 5 [json_name = "syncedModelId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_synced_model_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.mltraining.v1.TrainingJobMetadata.synced_model_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TrainingJobMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.mltraining.v1.TrainingJobMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.mltraining.v1.SubmitTrainingJobRequest request = 1 [json_name = "request"];
  if (this->_internal_has_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::request(this),
        _Internal::request(this).GetCachedSize(), target, stream);
  }

  // .viam.app.mltraining.v1.TrainingStatus status = 2 [json_name = "status"];
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp last_modified = 4 [json_name = "lastModified"];
  if (this->_internal_has_last_modified()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::last_modified(this),
        _Internal::last_modified(this).GetCachedSize(), target, stream);
  }

  // string synced_model_id = 5 [json_name = "syncedModelId"];
  if (!this->_internal_synced_model_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_synced_model_id().data(), static_cast<int>(this->_internal_synced_model_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.mltraining.v1.TrainingJobMetadata.synced_model_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_synced_model_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.mltraining.v1.TrainingJobMetadata)
  return target;
}

size_t TrainingJobMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.mltraining.v1.TrainingJobMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string synced_model_id = 5 [json_name = "syncedModelId"];
  if (!this->_internal_synced_model_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_synced_model_id());
  }

  // .viam.app.mltraining.v1.SubmitTrainingJobRequest request = 1 [json_name = "request"];
  if (this->_internal_has_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.request_);
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.created_on_);
  }

  // .google.protobuf.Timestamp last_modified = 4 [json_name = "lastModified"];
  if (this->_internal_has_last_modified()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.last_modified_);
  }

  // .viam.app.mltraining.v1.TrainingStatus status = 2 [json_name = "status"];
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TrainingJobMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TrainingJobMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TrainingJobMetadata::GetClassData() const { return &_class_data_; }


void TrainingJobMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TrainingJobMetadata*>(&to_msg);
  auto& from = static_cast<const TrainingJobMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.app.mltraining.v1.TrainingJobMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_synced_model_id().empty()) {
    _this->_internal_set_synced_model_id(from._internal_synced_model_id());
  }
  if (from._internal_has_request()) {
    _this->_internal_mutable_request()->::viam::app::mltraining::v1::SubmitTrainingJobRequest::MergeFrom(
        from._internal_request());
  }
  if (from._internal_has_created_on()) {
    _this->_internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_created_on());
  }
  if (from._internal_has_last_modified()) {
    _this->_internal_mutable_last_modified()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_last_modified());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TrainingJobMetadata::CopyFrom(const TrainingJobMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.mltraining.v1.TrainingJobMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainingJobMetadata::IsInitialized() const {
  return true;
}

void TrainingJobMetadata::InternalSwap(TrainingJobMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.synced_model_id_, lhs_arena,
      &other->_impl_.synced_model_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrainingJobMetadata, _impl_.status_)
      + sizeof(TrainingJobMetadata::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(TrainingJobMetadata, _impl_.request_)>(
          reinterpret_cast<char*>(&_impl_.request_),
          reinterpret_cast<char*>(&other->_impl_.request_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TrainingJobMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto_getter, &descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto_once,
      file_level_metadata_app_2fmltraining_2fv1_2fml_5ftraining_2eproto[4]);
}

// ===================================================================

class TrainingJob::_Internal {
 public:
  static const ::viam::app::mltraining::v1::TrainingJobMetadata& metadata(const TrainingJob* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& model_metadata(const TrainingJob* msg);
};

const ::viam::app::mltraining::v1::TrainingJobMetadata&
TrainingJob::_Internal::metadata(const TrainingJob* msg) {
  return *msg->_impl_.metadata_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
TrainingJob::_Internal::model_metadata(const TrainingJob* msg) {
  return *msg->_impl_.model_metadata_;
}
void TrainingJob::clear_model_metadata() {
  if (GetArenaForAllocation() == nullptr && _impl_.model_metadata_ != nullptr) {
    delete _impl_.model_metadata_;
  }
  _impl_.model_metadata_ = nullptr;
}
TrainingJob::TrainingJob(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.app.mltraining.v1.TrainingJob)
}
TrainingJob::TrainingJob(const TrainingJob& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TrainingJob* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.output_path_){}
    , decltype(_impl_.vertex_job_id_){}
    , decltype(_impl_.metadata_){nullptr}
    , decltype(_impl_.model_metadata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.output_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.output_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_output_path().empty()) {
    _this->_impl_.output_path_.Set(from._internal_output_path(), 
      _this->GetArenaForAllocation());
  }
  _impl_.vertex_job_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vertex_job_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vertex_job_id().empty()) {
    _this->_impl_.vertex_job_id_.Set(from._internal_vertex_job_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metadata()) {
    _this->_impl_.metadata_ = new ::viam::app::mltraining::v1::TrainingJobMetadata(*from._impl_.metadata_);
  }
  if (from._internal_has_model_metadata()) {
    _this->_impl_.model_metadata_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.model_metadata_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.mltraining.v1.TrainingJob)
}

inline void TrainingJob::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.output_path_){}
    , decltype(_impl_.vertex_job_id_){}
    , decltype(_impl_.metadata_){nullptr}
    , decltype(_impl_.model_metadata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.output_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.output_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.vertex_job_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vertex_job_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TrainingJob::~TrainingJob() {
  // @@protoc_insertion_point(destructor:viam.app.mltraining.v1.TrainingJob)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TrainingJob::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.output_path_.Destroy();
  _impl_.vertex_job_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metadata_;
  if (this != internal_default_instance()) delete _impl_.model_metadata_;
}

void TrainingJob::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TrainingJob::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.mltraining.v1.TrainingJob)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.output_path_.ClearToEmpty();
  _impl_.vertex_job_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metadata_ != nullptr) {
    delete _impl_.metadata_;
  }
  _impl_.metadata_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.model_metadata_ != nullptr) {
    delete _impl_.model_metadata_;
  }
  _impl_.model_metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TrainingJob::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.mltraining.v1.TrainingJob.id"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.mltraining.v1.TrainingJobMetadata metadata = 2 [json_name = "metadata", (.tagger.v1.tags) = "bson:\"metadata\" json:\"metadata\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string output_path = 3 [json_name = "outputPath", (.tagger.v1.tags) = "bson:\"output_path\" json:\"output_path\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_output_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.mltraining.v1.TrainingJob.output_path"));
        } else
          goto handle_unusual;
        continue;
      // string vertex_job_id = 4 [json_name = "vertexJobId", (.tagger.v1.tags) = "bson:\"vertex_job_id\" json:\"vertex_job_id\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_vertex_job_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.mltraining.v1.TrainingJob.vertex_job_id"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct model_metadata = 5 [json_name = "modelMetadata", (.tagger.v1.tags) = "bson:\"model_metadata\" json:\"model_metadata\""];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_model_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TrainingJob::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.mltraining.v1.TrainingJob)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.mltraining.v1.TrainingJob.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .viam.app.mltraining.v1.TrainingJobMetadata metadata = 2 [json_name = "metadata", (.tagger.v1.tags) = "bson:\"metadata\" json:\"metadata\""];
  if (this->_internal_has_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::metadata(this),
        _Internal::metadata(this).GetCachedSize(), target, stream);
  }

  // string output_path = 3 [json_name = "outputPath", (.tagger.v1.tags) = "bson:\"output_path\" json:\"output_path\""];
  if (!this->_internal_output_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_output_path().data(), static_cast<int>(this->_internal_output_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.mltraining.v1.TrainingJob.output_path");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_output_path(), target);
  }

  // string vertex_job_id = 4 [json_name = "vertexJobId", (.tagger.v1.tags) = "bson:\"vertex_job_id\" json:\"vertex_job_id\""];
  if (!this->_internal_vertex_job_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vertex_job_id().data(), static_cast<int>(this->_internal_vertex_job_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.mltraining.v1.TrainingJob.vertex_job_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_vertex_job_id(), target);
  }

  // .google.protobuf.Struct model_metadata = 5 [json_name = "modelMetadata", (.tagger.v1.tags) = "bson:\"model_metadata\" json:\"model_metadata\""];
  if (this->_internal_has_model_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::model_metadata(this),
        _Internal::model_metadata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.mltraining.v1.TrainingJob)
  return target;
}

size_t TrainingJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.mltraining.v1.TrainingJob)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string output_path = 3 [json_name = "outputPath", (.tagger.v1.tags) = "bson:\"output_path\" json:\"output_path\""];
  if (!this->_internal_output_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_output_path());
  }

  // string vertex_job_id = 4 [json_name = "vertexJobId", (.tagger.v1.tags) = "bson:\"vertex_job_id\" json:\"vertex_job_id\""];
  if (!this->_internal_vertex_job_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vertex_job_id());
  }

  // .viam.app.mltraining.v1.TrainingJobMetadata metadata = 2 [json_name = "metadata", (.tagger.v1.tags) = "bson:\"metadata\" json:\"metadata\""];
  if (this->_internal_has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metadata_);
  }

  // .google.protobuf.Struct model_metadata = 5 [json_name = "modelMetadata", (.tagger.v1.tags) = "bson:\"model_metadata\" json:\"model_metadata\""];
  if (this->_internal_has_model_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.model_metadata_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TrainingJob::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TrainingJob::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TrainingJob::GetClassData() const { return &_class_data_; }


void TrainingJob::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TrainingJob*>(&to_msg);
  auto& from = static_cast<const TrainingJob&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.app.mltraining.v1.TrainingJob)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_output_path().empty()) {
    _this->_internal_set_output_path(from._internal_output_path());
  }
  if (!from._internal_vertex_job_id().empty()) {
    _this->_internal_set_vertex_job_id(from._internal_vertex_job_id());
  }
  if (from._internal_has_metadata()) {
    _this->_internal_mutable_metadata()->::viam::app::mltraining::v1::TrainingJobMetadata::MergeFrom(
        from._internal_metadata());
  }
  if (from._internal_has_model_metadata()) {
    _this->_internal_mutable_model_metadata()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_model_metadata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TrainingJob::CopyFrom(const TrainingJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.mltraining.v1.TrainingJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainingJob::IsInitialized() const {
  return true;
}

void TrainingJob::InternalSwap(TrainingJob* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.output_path_, lhs_arena,
      &other->_impl_.output_path_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.vertex_job_id_, lhs_arena,
      &other->_impl_.vertex_job_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrainingJob, _impl_.model_metadata_)
      + sizeof(TrainingJob::_impl_.model_metadata_)
      - PROTOBUF_FIELD_OFFSET(TrainingJob, _impl_.metadata_)>(
          reinterpret_cast<char*>(&_impl_.metadata_),
          reinterpret_cast<char*>(&other->_impl_.metadata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TrainingJob::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto_getter, &descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto_once,
      file_level_metadata_app_2fmltraining_2fv1_2fml_5ftraining_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace mltraining
}  // namespace app
}  // namespace viam
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::viam::app::mltraining::v1::SubmitTrainingJobRequest*
Arena::CreateMaybeMessage< ::viam::app::mltraining::v1::SubmitTrainingJobRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::mltraining::v1::SubmitTrainingJobRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::mltraining::v1::SubmitTrainingJobResponse*
Arena::CreateMaybeMessage< ::viam::app::mltraining::v1::SubmitTrainingJobResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::mltraining::v1::SubmitTrainingJobResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::mltraining::v1::GetTrainingJobRequest*
Arena::CreateMaybeMessage< ::viam::app::mltraining::v1::GetTrainingJobRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::mltraining::v1::GetTrainingJobRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::mltraining::v1::GetTrainingJobResponse*
Arena::CreateMaybeMessage< ::viam::app::mltraining::v1::GetTrainingJobResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::mltraining::v1::GetTrainingJobResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::mltraining::v1::TrainingJobMetadata*
Arena::CreateMaybeMessage< ::viam::app::mltraining::v1::TrainingJobMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::mltraining::v1::TrainingJobMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::mltraining::v1::TrainingJob*
Arena::CreateMaybeMessage< ::viam::app::mltraining::v1::TrainingJob >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::mltraining::v1::TrainingJob >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
